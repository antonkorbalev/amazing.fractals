@page "/julia"

<div class="container text-center">
    <div class="input-group input-group-lg m-3">
        <div class="input-group-prepend">
            <span class="input-group-text" id="inputGroup-sizing-lg">C = </span>
        </div>
        <input type="text" class="form-control" aria-label="Large" aria-describedby="inputGroup-sizing-sm" @bind-value="@_cRe"/>
        <div class="input-group-prepend">
            <span class="input-group-text" id="inputGroup-sizing-lg"> +  </span>
        </div>
        <input type="text" class="form-control" aria-label="Large" aria-describedby="inputGroup-sizing-sm" @bind-value="@_cIm"/>
        <div class="input-group-prepend">
            <span class="input-group-text" id="inputGroup-sizing-lg"> i  </span>
        </div>
    </div>
    <div class="input-group input-group-lg m-3">
        <div class="input-group-prepend">
            <span class="input-group-text" id="inputGroup-sizing-lg">Max iterations</span>
        </div>
        <input type="text" class="form-control" aria-label="Large" aria-describedby="inputGroup-sizing-sm" @bind-value="@_maxIterations"/>
    </div>
    <div class="row m-3">
        <label type="button" class="btn btn-secondary btn-lg m-1 @(_zoomIn ? "disabled" : "")" @onclick="@ZoomIn" >
            <span class="oi oi-zoom-in"></span>
            Zoom in
        </label>
        <label type="button" class="btn btn-secondary btn-lg m-1 @(_zoomIn ? "" : "disabled")" @onclick="@ZoomOut">
            <span class="oi oi-zoom-out"></span>
            Zoom out
        </label>        
        <label type="button" class="btn btn-secondary btn-lg m-1" @onclick="@Generate">Generate Julia Set</label>
    </div>
    <div class="container @(_isBusy ? "invisible" : "visible")">
        <img class="@ImgClass"
             src="data:image;base64,@Convert.ToBase64String(_genBytes)"
             alt="Fractal is unavailable"/>
    </div>
    <div class="spinner-border @(_isBusy ? "visible" : "invisible") text-secondary" role="status">
      <span class="sr-only">Loading...</span>
    </div>
</div>

@using amazing.fractals.Data
@inject JuliaGeneratorService GeneratorService

@code {
    private byte[] _genBytes = new byte[0];
    private int _pixelsNum = 1000;
    private double _cRe = -0.7;
    private double _cIm = 0.27015;
    private int _maxIterations = 500;
    private bool _zoomIn = true;
    private bool _isBusy;

    private string ImgClass => $"img-fluid {(_zoomIn ? "cursor-zoom-in" : "cursor-zoom-out")}";

    private void ZoomIn()
    {
        _zoomIn = true;
        StateHasChanged();
    }

    private void ZoomOut()
    {
        _zoomIn = false;
        StateHasChanged();
    }
    
    protected override async Task OnInitializedAsync()
    {
        await Generate();
    }

    private async Task Generate()
    {
        await Task.Run(() =>
        {
            _genBytes = new byte[0];
            _isBusy = true;
        })
            .ContinueWith(async (res) =>
            {
                _genBytes = await GeneratorService.Generate(new FractalGenerationData()
                {
                    ImageHeight = _pixelsNum,
                    ImageWidth = _pixelsNum,
                    CRe = _cRe,
                    CIm = _cIm,
                    MaxIterations = _maxIterations
                });
                _isBusy = false;
            });
    }
}